### A B C D
### B
### C
### D
matrix_adjacency <- matrix(c(0,1,0,1),
c(1,0,1,0),
c(0,1,0,1),
c(1,0,1,0))
matrix(c(0,1,0,1),
c(1,0,1,0),
c(0,1,0,1),
c(1,0,1,0))
### A B C D
### B
### C
### D
matrix_adjacency <- as.matrix(c(0,1,0,1),
c(1,0,1,0),
c(0,1,0,1),
c(1,0,1,0))
matrix_adjacency
### A B C D
### B
### C
### D
matrix_adjacency <- matrix(c(0,1,0,1,
1,0,1,0,
0,1,0,1,
1,0,1,0), by.rows = TRUE)
### A B C D
### B
### C
### D
matrix_adjacency <- matrix(c(0,1,0,1,
1,0,1,0,
0,1,0,1,
1,0,1,0), by.row = TRUE)
?matrix
### A B C D
### B
### C
### D
matrix_adjacency <- matrix(c(0,1,0,1,
1,0,1,0,
0,1,0,1,
1,0,1,0), nrow = 4, ncol =4, byrow = TRUE)
matrix_adjacency
matrix_adjacency/2
matrix_adjacency <- matrix_adjacency/2
matrix_adjacency
Number_vec <- c(100,50,20,10)
Number_vec_0 <- c(100,50,20,10)
matrix_adjacency %*% Number_vec_0
initial_vec = initial_vec %*% Number_vec
initial_vec <- Number_vec_0
adjacency_matrix <- matrix_adjacency
time_step_model
time_step_model <- NULL
for (i in seq(1, time_step))
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% Number_vec
time_step_model <- cbind(initial_vec, time_step)
}
time_step = 30
time_step_model <- NULL
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% Number_vec
time_step_model <- cbind(initial_vec, time_step)
}
time_step_model
cbind(initial_vec, time_step)
initial_vec
time_step
time_step_model <- cbind.data.frame(N = initial_vec,time= time_step)
time_step_model
time_step_model
View(
time_step_model)
time_step_model[[i]] <- cbind.data.frame(N = initial_vec,time= time_step)
function_dispersal <- function(initial_vec, adjacency_matrix, time_step){
function_dispersal <- function(initial_vec, adjacency_matrix, time_step){
time_step_model <- NULL
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% Number_vec
time_step_model[[i]] <- cbind.data.frame(N = initial_vec,time= time_step)
}
function_dispersal(Number_vec_0 ,matrix_adjacency, 30 )
function_dispersal <- function(initial_vec, adjacency_matrix, time_step){
time_step_model <- NULL
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% Number_vec
time_step_model[[i]] <- cbind.data.frame(N = initial_vec,time= time_step)
}
}
function_dispersal(Number_vec_0 ,matrix_adjacency, 30 )
full_model_timestep <- function_dispersal(Number_vec_0 ,matrix_adjacency, 30 )
full_model_timestep
function_dispersal <- function(initial_vec, adjacency_matrix, time_step){
time_step_model <- NULL
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% Number_vec
time_step_model[[i]] <- cbind.data.frame(N = initial_vec,time= time_step)
}
}
full_model_timestep <- function_dispersal(Number_vec_0 ,matrix_adjacency, 30 )
function_dispersal <- function(initial_vec, adjacency_matrix, time_step){
time_step_model <- NULL
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% Number_vec
time_step_model[[i]] <- cbind.data.frame(N = initial_vec,time= time_step)
}
return(do.call(rbind,time_step_model))
}
full_model_timestep <- function_dispersal(Number_vec_0 ,matrix_adjacency, 30 )
function_dispersal <- function(initial_vec, adjacency_matrix, time_step){
time_step_model <- NULL
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% Number_vec
time_step_model[[i]] <- cbind.data.frame(N = initial_vec,time= time_step)
}
return(do.call(rbind,time_step_model))
}
full_model_timestep <- function_dispersal(Number_vec_0 ,matrix_adjacency, 30 )
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% Number_vec
time_step_model[[i]] <- cbind.data.frame(N = initial_vec,time= time_step)
}
time_step_model
time_step_model <- NULL
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% Number_vec
time_step_model[[i]] <- cbind.data.frame(N = initial_vec,time= time_step)
}
time_step_model
time_step_model
function_dispersal <- function(initial_vec, adjacency_matrix, time_step){
time_step_model <- NULL
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% Number_vec
time_step_model[[i]] <- cbind.data.frame(initial_vec,time= time_step)
}
return(do.call(rbind,time_step_model))
}
full_model_timestep <- function_dispersal(Number_vec_0 ,matrix_adjacency, 30 )
time_step_model
time_step_model <- NULL
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% Number_vec
time_step_model[[i]] <- cbind.data.frame(initial_vec,time= time_step)
}
return(do.call(rbind,time_step_model))
time_step_model
time_step_model <- NULL
initial_vec <- original_vec
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% Number_vec
time_step_model[[i]] <- cbind.data.frame(initial_vec,time= time_step)
}
return(do.call(rbind,time_step_model))
time_step_model
i in 29
initial_vec %*% Number_vec
initial_vec <- original_vec
initial_vec
Number_vec_0 <- c(100,50,20,10)
original_vec <- Number_vec_0
initial_vec <- original_vec
initial_vec
initial_vec = initial_vec %*% Number_vec
initial_vec = initial_vec %*% adjacency_matrix
adjacency_matrix
initial_vec
initial_vec <- original_vec
initial_vec
initial_vec = initial_vec %*% adjacency_matrix
initial_vec
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% adjacency_matrix
time_step_model[[i]] <- cbind.data.frame(initial_vec,time= time_step)
}
time_step_model
time_step
function_dispersal <- function(original_vec, adjacency_matrix, time_step){
time_step_model <- NULL
initial_vec <- original_vec
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% adjacency_matrix
time_step_model[[i]] <- cbind.data.frame(initial_vec,time= time_step)
}
return(do.call(rbind,time_step_model))
}
full_model_timestep <- function_dispersal(Number_vec_0 ,matrix_adjacency, 30 )
full_model_timestep
time_step
function_dispersal <- function(original_vec, adjacency_matrix, time_step){
time_step_model <- NULL
initial_vec <- original_vec
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% adjacency_matrix
time_step_model[[i]] <- cbind.data.frame(initial_vec,time= i)
}
return(do.call(rbind,time_step_model))
}
full_model_timestep <- function_dispersal(Number_vec_0 ,matrix_adjacency, 30 )
full_model_timestep
colnames(full_model) <- c("A", "B", "C", "D", "time")
function_dispersal <- function(original_vec, adjacency_matrix, time_step){
time_step_model <- NULL
initial_vec <- original_vec
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% adjacency_matrix
time_step_model[[i]] <- cbind.data.frame(initial_vec,time= i)
}
full_model <- do.call(rbind,time_step_model)
colnames(full_model) <- c("A", "B", "C", "D", "time")
return(full_model)
}
full_model_timestep <- function_dispersal(Number_vec_0 ,matrix_adjacency, 30 )
full_model_timestep
initial_vec <- original_vec
initial_vec = initial_vec %*% adjacency_matrix
initial_vec
Number_vec_0 <- c(20,50,20,10)
function_dispersal <- function(original_vec, adjacency_matrix, time_step){
time_step_model <- NULL
initial_vec <- original_vec
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% adjacency_matrix
time_step_model[[i]] <- cbind.data.frame(initial_vec,time= i)
}
full_model <- do.call(rbind,time_step_model)
colnames(full_model) <- c("A", "B", "C", "D", "time")
return(full_model)
}
full_model_timestep <- function_dispersal(Number_vec_0 ,matrix_adjacency, 30 )
full_model_timestep
1,0,1,0), nrow = 4, ncol =4, byrow = TRUE)
matrix_adjacency
### A B C D
### B
### C
### D
matrix_adjacency <- matrix(c(0,0.4,0,0.6,
1,0,1,0,
0,1,0,1,
1,0,1,0), nrow = 4, ncol =4, byrow = TRUE)
matrix_adjacency <- matrix_adjacency/2
### A B C D
### B
### C
### D
matrix_adjacency <- matrix(c(0,0.4,0,0.6,
1,0,1,0,
0,1,0,1,
1,0,1,0), nrow = 4, ncol =4, byrow = TRUE)
matrix_adjacency <- matrix_adjacency/2
```{r}
Number_vec_0
time_step_model <- NULL
initial_vec <- original_vec
initial_vec = initial_vec %*% adjacency_matrix
initial_vec
Number_vec_0 <- c(20,50,20,10)
initial_vec <- Number_vec_0
initial_vec = initial_vec %*% adjacency_matrix
initial_vec
initial_vec
initial_vec = initial_vec %*% adjacency_matrix
initial_vec
initial_vec = initial_vec %*% adjacency_matrix
initial_vec
### A B C D
### B
### C
### D
matrix_adjacency <- matrix(c(0,0,0,1,
1,0,1,0,
0,1,0,1,
1,0,1,0), nrow = 4, ncol =4, byrow = TRUE)
matrix_adjacency <- matrix_adjacency/2
### A B C D
### B
### C
### D
matrix_adjacency <- matrix(c(0,0,0,1,
1,0,1,0,
0,1,0,1,
1,0,1,0), nrow = 4, ncol =4, byrow = TRUE)
matrix_adjacency <- matrix_adjacency/2
```{r}
Number_vec_0 <- c(20,50,20,10)
function_dispersal <- function(original_vec, adjacency_matrix, time_step){
time_step_model <- NULL
initial_vec <- original_vec
for (i in seq(1, time_step)){
initial_vec = initial_vec %*% adjacency_matrix
time_step_model[[i]] <- cbind.data.frame(initial_vec,time= i)
}
full_model <- do.call(rbind,time_step_model)
colnames(full_model) <- c("A", "B", "C", "D", "time")
return(full_model)
}
full_model_timestep <- function_dispersal(Number_vec_0 ,matrix_adjacency, 30 )
full_model_timestep
matrix_adjacency
library(ggplot2)
full_model_timestep
library(igraph)
graph_from_adjacency_matrix(matrix_adjacency )
plot( graph_from_adjacency_matrix(matrix_adjacency ))
plot( graph_from_adjacency_matrix(matrix_adjacency ))
plot( graph_from_adjacency_matrix(matrix_adjacency, mode = 'directed'))
plot( graph_from_adjacency_matrix(matrix_adjacency, mode = 'directed', weighted=TRUE))
network <- graph_from_adjacency_matrix(matrix_adjacency, mode = 'directed', weighted=TRUE)
network
ggplot(network, aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(linetype = type), color = "grey50")
network
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(linetype = type), color = "grey50") +
geom_nodes(aes(color = family, size = importance)) +
theme_blank()
library(ggnetwork)
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges(aes(linetype = type), color = "grey50") +
geom_nodes(aes(color = family, size = importance)) +
theme_blank()
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend))
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes(aes(color = family, size = importance)) +
theme_blank()
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes() +
theme_blank()
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes(size = 4) +
theme_blank()
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes(size = 20) +
theme_blank()
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes(size = 10) +
theme_blank()
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes(size = 10, aes = color(family)) +
theme_blank()
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes(size = 10, aes(color=family)) +
theme_blank()
geom_nodes(aes(color = family) +
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes(aes(color = family))+
theme_blank()
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes(aes(color = family))+
theme_blank()
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes()+
theme_blank()
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes(size = 2)+
theme_blank()
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes(size = 5)+
theme_blank()
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes(size = 20)+
theme_blank()
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes(size = 10)+
theme_blank()
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes(size = 10)+
geom_nodetext(label = LETTERS[ vertex.names ]),
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes(size = 10)+
geom_nodetext(aes(label = LETTERS[ vertex.names ]),
fontface = "bold") +
theme_blank()
LETTERS
vertex.names
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes(size = 10)
ggplot(ggnetwork(network ), aes(x = x, y = y, xend = xend, yend = yend)) +
geom_edges( color = "grey50") +
geom_nodes(size = 10)+
theme_blank()
full_model_timestep
full_model_timestep
c(3,1,"C"), c(1,3, "D")
point_data_frame <- rbind(c(3,6, "A"), c(6,3,"B"),
c(3,1,"C"), c(1,3, "D"))
point_data_frame
point_data_frame <- rbind.data.frame(c(3,6, "A"), c(6,3,"B"),
c(3,1,"C"), c(1,3, "D"))
point_data_frame
colnames(point_data_frame) <- c("x","y", "ID")
melt(full_model_timestep, id.vars = c("time_step")
melt(full_model_timestep, id.vars = c("time_step"))
melt(full_model_timestep, id.vars = c("time_step"))
library(reshape2)
melted <- melt(full_model_timestep, id.vars = c("time_step"))
melted
melted <- melt(full_model_timestep, id.vars = c("time_step"))
melted <- melt(full_model_timestep, id.vars = c("time"))
melted
left_join(melted, point_data_frame)
library(dplyr)
left_join(melted, point_data_frame)
melted <- melt(full_model_timestep, id.vars = c("time"))
melted
left_join(melted, point_data_frame, by= c("variable" = "ID"))
full_df <- left_join(melted, point_data_frame, by= c("variable" = "ID"))
ggplot(full_df, aes(x = x ,y = y, fill = value)
ggplot(full_df, aes(x = x ,y = y, fill = value))
ggplot(full_df, aes(x = x ,y = y, fill = value))
ggplot(full_df, aes(x = x ,y = y, fill = value)) + geom_point(shape = 21)
ggplot(full_df, aes(x = x ,y = y, fill = value)) + geom_point(shape = 21, size = 4)
ggplot(full_df, aes(x = x ,y = y, fill = value)) + geom_point(shape = 21, size = 20)
+geom_line()
ggplot(full_df, aes(x = x ,y = y, fill = value)) + geom_point(shape = 21, size = 20)+geom_line()
ggplot(full_df, aes(x = x ,y = y, fill = value, group = 1)) + geom_point(shape = 21, size = 20)+geom_line()
ggplot(full_df, aes(x = x ,y = y, fill = value, group = 1)) + geom_point(shape = 21, size = 20)
gganimate()
library(gganimate)
ggplot(full_df, aes(x = x ,y = y, fill = value, group = 1)) + geom_point(shape = 21, size = 20)+transition_time(time)
ggplot(full_df, aes(x = x ,y = y, fill = value, group = 1)) + geom_point(shape = 21, size = 20)+transition_time(time)  scale_fill_viridis()+ theme_classic()
library(viridis)
ggplot(full_df, aes(x = x ,y = y, fill = value, group = 1)) + geom_point(shape = 21, size = 20)+transition_time(time)  +scale_fill_viridis()+ theme_classic()
ggplot(full_df, aes(x = x ,y = y, fill = value, group = 1)) + geom_point(shape = 21, size = 20)+transition_time(time)  +scale_fill_viridis()+ theme_void()
ggplot(full_df, aes(x = x ,y = y, fill = value, group = 1)) + geom_point(shape = 21, size = 20)+geom_path()
ggplot(full_df, aes(x = x ,y = y, fill = value, group = 1)) + geom_point(shape = 21, size = 20)+geom_path() + transition_time(time)  +scale_fill_viridis(option = 'turbo')+ theme_void()
ggplot(full_df, aes(x = x ,y = y, fill = value, group = 1)) + geom_path() + geom_point(shape = 21, size = 20) + transition_time(time)  +scale_fill_viridis(option = 'turbo')+ theme_void()
ggplot(full_df, aes(x = x ,y = y, fill = value, group = 1)) + geom_point(shape = 21, size = 20) + transition_time(time)  +scale_fill_viridis(option = 'turbo')+ theme_void()
